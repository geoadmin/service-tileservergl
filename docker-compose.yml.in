version: '2'
services:
  nginx:
    image: swisstopo/nginx-tileserver-gl:${image_tag}
% if rancher_deploy == 'false':
    build: nginx/
% endif
    ports:
    - ${nginx_port}:${nginx_port}
    command:
    - nginx
    - -g
    - daemon off;
% if ci == 'false':
    network_mode: "host"
% endif
    depends_on:
    - tileserver-gl
    labels:
      io.rancher.scheduler.affinity:host_label: application=tod,staging=${staging}
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
  tileserver-gl:
    env_file:
    - ${staging}.env
    image: swisstopo/tileserver-gl:${image_tag}
% if rancher_deploy == 'false' and ci == 'false':
    build: tileserver-gl/
% endif
    ports:
    - ${tileserver_port}:${tileserver_port}
    command:
    - xvfb-run
    - -a
    - -e
    - /dev/stdout
    - --server-args="-screen 0 1024x768x24"
    - node
    - /usr/src/app/
    - -p
    - ${tileserver_port}
    - -c
    - /usr/src/app/tileserver-gl-config.json
    - -l
    - -s
    volumes:
    - /var/local/efs-${staging}/vectortiles:/var/local/efs-${staging}/vectortiles
% if ci == 'false':
    network_mode: 'host'
% endif
    labels:
      io.rancher.scheduler.affinity:host_label: application=tod,staging=${staging}
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
